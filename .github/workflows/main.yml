name: List Env Files and Deploy Docker Image

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: "Branch to fetch environment files from"
        required: true
        default: "unified-env-lts"
      env_file:
        description: "Environment file to use"
        required: true
      cluster_name:
        description: "EKS cluster name to log in to"
        required: true
      region:
        description: "AWS region of the EKS cluster"
        required: true
        default: "us-east-1"
      docker_image:
        description: "Docker image to deploy"
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  list-env-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: List .yaml Env Files in environments Folder
        run: |
          echo "Fetching .yaml environment files from branch: ${{ github.event.inputs.branch_name }}"
          files=$(find ./deploy-as-code/helm/environments -type f -name "*.yaml")
          if [ -z "$files" ]; then
            echo "No environment files found in this branch."
          else
            echo "List of environment files found:"
            echo "$files"
          fi

      - name: Pause for User Input
        run: |
          echo "Please manually trigger the workflow again with the selected env_file input."

  deploy-docker-image:
    if: ${{ github.event.inputs.env_file != '' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch_name }}

      - name: Fetch and Source Env File
        run: |
          echo "Using environment file: ${{ github.event.inputs.env_file }}"
          source ${{ github.event.inputs.env_file }}

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region ${{ github.event.inputs.region }}

      - name: Generate kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ github.event.inputs.cluster_name }} --region ${{ github.event.inputs.region }}

      - name: Deploy Docker Image
        run: |
          kubectl set image deployment/my-deployment my-container=${{ github.event.inputs.docker_image }}
          kubectl rollout status deployment/my-deployment
